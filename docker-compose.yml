services:
  backend:
    build: .
    command: bash -c "python manage.py migrate && python manage.py runserver"
    env_file:
      - .env
    volumes:
      - .:/code
      - static_volume:/code/staticfiles
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres
    env_file:
      - .env
    environment:
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        POSTGRES_DB: ${POSTGRES_DB}
    expose:
      - "5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    build:
      context: ./nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/code/staticfiles
    depends_on:
      - backend

  redis:
    image: redis
    expose:
      - "6379"
    env_file:
      - .env
    volumes:
      - redis_data:/data

  celery:
    build: .
    command: celery -A config worker -l INFO
    env_file:
      - .env
    depends_on:
      - redis
      - db
      - backend

  celery-beat:
    build: .
    command: celery -A config beat -l INFO
    env_file:
      - .env
    depends_on:
      - redis
      - db
      - backend

volumes:
  postgres_data:
  static_volume:
  redis_data:

networks:
  default: